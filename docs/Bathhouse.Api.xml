<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bathhouse.Api</name>
    </assembly>
    <members>
        <member name="M:Bathhouse.Api.Controllers.v1.QuestionController.GetQuestionById(System.Guid)">
            <summary>
            Get Question by ID
            </summary>
            <param name="questionId">The question Id in Survey ID</param>
        </member>
        <member name="M:Bathhouse.Api.Controllers.v1.QuestionController.Update(System.Guid,Bathhouse.Contracts.v1.Models.QuestionRequest)">
            <summary>
            Update Question
            </summary>
            <param name="questionId">ID of Question for updating</param>
            <param name="request">Updating question</param>
        </member>
        <member name="M:Bathhouse.Api.Controllers.v1.QuestionController.Delete(System.Guid)">
            <summary>
            Delete Question by ID
            </summary>
            <param name="questionId">Question ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.ClientController.GetAll(Chuk.Helpers.AspNetCore.PaginationQuery,System.Nullable{System.Guid})">
            <summary>
            Get all of Clients
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.ClientController.GetById(System.Guid)">
            <summary>
            Get Client by ID
            </summary>
            <param name="clientId">The Client ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.ClientController.Create(Bathhouse.Contracts.v1.Models.ClientRequest)">
            <summary>
            Add Client.
            </summary>
            <param name="request">Newly creating Client</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.ClientController.Update(System.Guid,Bathhouse.Contracts.v1.Models.ClientRequest)">
            <summary>
            Update Client
            </summary>
            <param name="request">Client for updating</param>
            <param name="clientId">ID of Client for updating</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.ClientController.Delete(System.Guid)">
            <summary>
            Delete Client by ID
            </summary>
            <param name="clientId">Client ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetAll(Chuk.Helpers.AspNetCore.PaginationQuery)">
            <summary>
            Get all of Employees
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetById(System.Guid)">
            <summary>
            Get Employee by ID
            </summary>
            <param name="employeeId">The Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.Create(Bathhouse.Contracts.v1.Models.EmployeeRequest)">
            <summary>
            Add Employee.
            </summary>
            <param name="request">Newly creating Employee</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.Update(System.Guid,Bathhouse.Contracts.v1.Models.EmployeeRequest)">
            <summary>
            Update Employee
            </summary>
            <param name="request">Employee for updating</param>
            <param name="employeeId">ID of Employee for updating</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.Delete(System.Guid)">
            <summary>
            Delete Employee by ID
            </summary>
            <param name="employeeId">Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetRolesForEmployee(System.Guid)">
            <summary>
            Get roles for employee
            </summary>
            <param name="employeeId">The Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.AddRoleForEmployee(System.Guid,System.String)">
            <summary>
            Add Role to Employee.
            </summary>
            <param name="employeeId">Employee ID</param>
            <param name="newRole">Name of an adding role</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.DeleteRoleFromEmployee(System.Guid,System.String)">
            <summary>
            Remove Employee from Role.
            </summary>
            <param name="employeeId">Employee ID</param>
            <param name="newRole">Name of an deleting role</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetAllTheDirectors">
            <summary>
            Get all of the directors in the system
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetAllSimpleEmployees">
            <summary>
            Get all of the employees in the system
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetAllManagers">
            <summary>
            Get all of the managers in the system
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetAllTechSupporters">
            <summary>
            Get all of the tech supporters in the system
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetOfficesForEmployee(System.Guid)">
            <summary>
            Get offices for employee
            </summary>
            <param name="employeeId">The Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.DeleteOfficeFromEmployee(System.Guid,System.Guid)">
            <summary>
            Delete office for employee
            </summary>
            <param name="employeeId">Employee ID</param>
            <param name="officeId">ID deleting office</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.AddOfficeToEmployee(System.Guid,System.Guid)">
            <summary>
            Add office for employee
            </summary>
            <param name="employeeId">Employee ID</param>
            <param name="officeId">Office ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.SetOfficesForEmployee(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Set new list of offices to employee
            </summary>
            <param name="employeeId">Employee  ID</param>
            <param name="officeIds">Office IDs</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetWorkItemsForEmployee(System.Guid)">
            <summary>
            Get workitems for current employee
            </summary>
            <param name="employeeId">The Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetAllWorkItemsCreatedByEmployee(System.Guid)">
            <summary>
            Get workitems created by current employee
            </summary>
            <param name="employeeId">The Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetWorkItemCreatedByEmployee(System.Guid,System.Guid)">
            <summary>
            Get workitem created by current employee
            </summary>
            <param name="employeeId">The Employee ID</param>
            <param name="workitemId">WorkItem ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.DeleteWorkItemCreatedByEmployee(System.Guid,System.Guid)">
            <summary>
            Delete workItem
            </summary>
            <param name="employeeId">Employee ID</param>
            <param name="workitemId">WorkItem ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.CreateWorkItemByEmployee(System.Guid,Bathhouse.Contracts.v1.Models.WorkItemRequest)">
            <summary>
            Create workItem.
            </summary>
            <param name="employeeId">Employee ID</param>
            <param name="workItem">Newly creating workItem. WokrItemRequest.CreatorId will be overwrited by Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.UpdateCreatedWorkItem(System.Guid,System.Guid,Bathhouse.Contracts.v1.Models.WorkItemRequest)">
            <summary>
            Update WorkItem
            </summary>
            <param name="request">WorkItem for updating</param>
            <param name="employeeId">ID of entity for updating</param>
            <param name="workitemId"></param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.ChangeStatusMyWorkItem(System.Guid,System.Guid,Bathhouse.ValueTypes.WorkItemStatus)">
            <summary>
            Change status for one of the MyWorkItem
            </summary>
            <param name="employeeId">ID of entity for updating</param>
            <param name="workitemId"></param>
            <param name="newWorkItemStatus">New status for workItem</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetAllSurveysForEmployee(System.Guid)">
            <summary>
            Get all of surveys for current employee
            </summary>
            <param name="employeeId">The Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetSurveySummaryForEmployee(System.Guid,System.Guid,Bathhouse.ValueTypes.SurveyResultSummaryType)">
            <summary>
            Get survey summary
            </summary>
            <param name="employeeId">The Employee ID</param>
            <param name="surveyId">Survey ID</param>
            <param name="summarytype">Summary type</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.DeleteSurveyForEmployee(System.Guid,System.Guid)">
            <summary>
            Delete Survey
            </summary>
            <param name="employeeId">Employee ID</param>
            <param name="surveyId">Survey ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.GetSurveyForEmployee(System.Guid,System.Guid)">
            <summary>
            Get survey
            </summary>
            <param name="employeeId">The Employee ID</param>
            <param name="surveyId">Survey ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.CreateSurveyForEmployee(System.Guid,Bathhouse.Contracts.v1.Models.SurveyRequest)">
            <summary>
            Create Survey.
            </summary>
            <param name="employeeId">Employee ID</param>
            <param name="survey">Newly creating Survey. SurveyRequest.AuthorId will be overwrited by Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.EmployeeController.UpdateSurveyForEmployee(System.Guid,System.Guid,System.String,System.String)">
            <summary>
            Update Survey
            </summary>
            <param name="employeeId">ID of entity for updating</param>
            <param name="surveyId">Survey for updating</param>
            <param name="newName">New name</param>
            <param name="newDescription">New Description</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.GetAll(Chuk.Helpers.AspNetCore.PaginationQuery,System.Nullable{System.Int32})">
            <summary>
            Get all of Offices
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.GetById(System.Guid)">
            <summary>
            Get Office by ID
            </summary>
            <param name="officeId">The Office ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.Create(Bathhouse.Contracts.v1.Models.OfficeRequest)">
            <summary>
            Add Office.
            </summary>
            <param name="request">Newly creating Office</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.Update(System.Guid,Bathhouse.Contracts.v1.Models.OfficeRequest)">
            <summary>
            Update Office
            </summary>
            <param name="request">Office for updating</param>
            <param name="officeId">ID of Office for updating</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.Delete(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Delete Office by ID
            </summary>
            <param name="officeId">Office ID</param>
            <param name="newOfficeId">The ID of Office that will be set for clients of the deleting Office. 
            If newOfficeIdForClients equal NULL, then for clients of the deleting Office OfficeId will be set NULL</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.GetManagersInOffice(System.Guid)">
            <summary>
            Get managers of office
            </summary>
            <param name="officeId">The Office ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.GetEmployeesInOffice(System.Guid)">
            <summary>
            Get employees of office
            </summary>
            <param name="officeId">The Office ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.DeleteEmployeeFromOffice(System.Guid,System.Guid)">
            <summary>
            Delete employee of office
            </summary>
            <param name="officeId">Office ID</param>
            <param name="employeeId">ID deleting employee</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.AddEmployeeToOffice(System.Guid,System.Guid)">
            <summary>
            Add employee to office
            </summary>
            <param name="officeId">Office ID</param>
            <param name="employeeId">Employee ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.OfficeController.SetEmployeesToOffice(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Set new list of employees to office
            </summary>
            <param name="officeId">Office ID</param>
            <param name="employeeIds">Employee IDs</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.RoleController.GetAll">
            <summary>
            Get all of the roles in the system
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.RoleController.GetById(System.Guid)">
            <summary>
            Get the role by its ID
            </summary>
            <param name="roleId">Role Id</param>
            <returns>Role</returns>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.RoleController.Create(System.String)">
            <summary>
            Create new role
            </summary>
            <param name="name">Name of the new role.</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.RoleController.Update(System.Guid,System.String)">
            <summary>
            Update name of a role
            </summary>
            <param name="roleId">Role Id</param>
            <param name="newName">New name of the role with Id</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.RoleController.Delete(System.Guid)">
            <summary>
            Delete Role
            </summary>
            <param name="roleId">Role Id</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.RoleController.GetEmployeesInRole(System.Guid)">
            <summary>
            Get all of employees in the role
            </summary>
            <param name="roleId">Role Id</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.RoleController.AddEmployeeToRole(System.Guid,System.Guid)">
            <summary>
            Add employee to the role.
            </summary>
            <param name="roleId">Role ID</param>
            <param name="employeeId">Employee Id</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.RoleController.DeleteEmployeeFromRole(System.Guid,System.Guid)">
            <summary>
            Delete employee from the role
            </summary>
            <param name="roleId">Role ID</param>
            <param name="employeeId">Employee Id</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.SurveyController.GetAll(Chuk.Helpers.AspNetCore.PaginationQuery,Bathhouse.Contracts.v1.Models.SurveyFilterQuery)">
            <summary>
            Get all of Surveys
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.SurveyController.GetById(System.Guid)">
            <summary>
            Get Survey by ID
            </summary>
            <param name="surveyId">The Survey ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.SurveyController.Create(Bathhouse.Contracts.v1.Models.SurveyRequest)">
            <summary>
            Add Survey.
            </summary>
            <param name="request">Newly creating Survey</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.SurveyController.Update(System.Guid,System.String,System.String)">
            <summary>
            Update Survey
            </summary>
            <param name="surveyId">ID of Survey for updating</param>
            <param name="newName">New Name</param>
            <param name="newDescription">New Description</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.SurveyController.Delete(System.Guid)">
            <summary>
            Delete Survey by ID
            </summary>
            <param name="surveyId">Survey ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.SurveyController.GetSurveySummary(System.Guid,Bathhouse.ValueTypes.SurveyResultSummaryType)">
            <summary>
            Get summary of survey
            </summary>
            <param name="surveyId">Id of summary</param>
            <param name="summaryType">Summary type</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.WorkItemController.GetAll(Chuk.Helpers.AspNetCore.PaginationQuery,Bathhouse.Contracts.v1.Models.WorkItemFilterQuery)">
            <summary>
            Get all of WorkItems
            </summary>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.WorkItemController.GetById(System.Guid)">
            <summary>
            Get WorkItem by ID
            </summary>
            <param name="workItemId">The WorkItem ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.WorkItemController.Create(Bathhouse.Contracts.v1.Models.WorkItemRequest)">
            <summary>
            Add WorkItem.
            </summary>
            <param name="request">Newly creating WorkItem</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.WorkItemController.Update(System.Guid,Bathhouse.Contracts.v1.Models.WorkItemRequest)">
            <summary>
            Update WorkItem
            </summary>
            <param name="request">WorkItem for updating</param>
            <param name="workItemId">ID of WorkItem for updating</param>
            <returns></returns>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.WorkItemController.Delete(System.Guid)">
            <summary>
            Delete WorkItem by ID
            </summary>
            <param name="workItemId">WorkItem ID</param>
        </member>
        <member name="M:Bathhouse.Api.v1.Controllers.WorkItemController.ChangeStatusOfWorkItem(System.Guid,Bathhouse.ValueTypes.WorkItemStatus)">
            <summary>
            Change status
            </summary>
            <param name="workitemId"></param>
            <param name="newWorkItemStatus">New status for workItem</param>
        </member>
    </members>
</doc>
